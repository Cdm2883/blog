<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Cdm2883 的个人博客</title><description>我的中文个人博客 =￣ω￣=</description><link>https://blog.cdms.vip/</link><atom:link href="https://blog.cdms.vip/feed_rss_created.xml" rel="self" type="application/rss+xml" /><managingEditor>Cdm2883</managingEditor><docs>https://github.com/Cdm2883/Blog</docs><language>zh</language> <pubDate>Sun, 06 Oct 2024 12:27:26 -0000</pubDate> <lastBuildDate>Sun, 06 Oct 2024 12:27:26 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.15.0</generator> <item> <title>将 Compose Multiplatform 移植到 OpenHarmony 的可行性研究</title> <category>Compose</category> <category>Kotlin</category> <category>技术</category> <description>随着鸿蒙系统的宣发，国内有越来越多的行业选择拥抱鸿蒙应用生态。但全新的生态，若从原生迁移构建新的应用，则需要大量的时间、学习、人力等成本。但好在为了解决这种问题，业内涌现了许多优秀的多平台开发框架，其中不乏有 Qt、Flutter、React Native 等等。鸿蒙的 Flutter 支持似乎是目前最受欢迎的 （以至于官方 ArkUI 代码中都带有 Flutter 字样），多平台框架的支持既可以减少开发的压力，又可以的在短时间内快速补充鸿蒙的生态。但我们今天探讨的主角是由 Jetpack Compose 演化而来新兴多平台 UI 框架 —— Compose Multiplatform。</description><link>https://blog.cdms.vip/2024/10/06/feasibility-study-for-compose-for-harmony/</link> <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate><source url="https://blog.cdms.vip/feed_rss_created.xml">Cdm2883 的个人博客</source><comments>https://blog.cdms.vip/2024/10/06/feasibility-study-for-compose-for-harmony/#__comments</comments><guid isPermaLink="true">https://blog.cdms.vip/2024/10/06/feasibility-study-for-compose-for-harmony/</guid> </item> <item> <title>Hello world!</title> <description>我的第一篇博文 （其实也不太算是） 就在今天诞生了！托了辣么久今天终于想着搞定它了！</description><link>https://blog.cdms.vip/2024/07/23/hello-world/</link> <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><source url="https://blog.cdms.vip/feed_rss_created.xml">Cdm2883 的个人博客</source><comments>https://blog.cdms.vip/2024/07/23/hello-world/#__comments</comments><guid isPermaLink="true">https://blog.cdms.vip/2024/07/23/hello-world/</guid> </item> </channel></rss>